---
title: "Tutorial Deep Learning con Pytorch"
description: "Tutorial de pytorch para la asignatura Tratamiento Digital de Voz e Imagen, del grado en Sonido de Imagen de la Universidad de Málaga.."
author:
  - name: F.J. Martinez-Murcia
    url: https://fjmartinezmurcia.es/
    orcid: 0000-0001-8146-7056
    affiliation: Dpt. of Signal Theory, Networking and Communications. University of Granada & DaSCI. 
    affiliation-url: https://dasci.es/ 
date: 05-11-2020
categories: [docencia, matlab, python, deep learning, computer visioin, sistemas] # self-defined categories
citation: 
  url: https://pakitochus.github.io/fjmartinezmurcia.es/teaching/2021-10-01-DeepLearning/
image: logo.png
draft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!
---

[{{< fa book >}} Formato libro](https://pakitochus.github.io/tutorial_pytorch/landing-page.html){.btn .btn-primary .btn role="button" data-toggle="tooltip" title="Read the documentation"}
[{{< fa brands github >}} Repositorio](https://github.com/pakitochus/tutorial_pytorch){.btn .btn-outline-primary .btn role="button" data-toggle="tooltip" title="Repositorio"}

En 2020 tuve la suerte de poder realizar una práctica de introducción al Deep Learning utilizando pytorch para que lo usaran los alumnos del **grado en Sonido e Imagen** de la Universidad de Málaga. 

Posteriormente lo edité en formato libro (bastante fácil siendo todos notebooks de jupyter) y lo colgué en github. 

# Organización del tutorial

Este tutorial consta de tres partes, cada una de ellas es un *notebook* de [jupyter](https://jupyter.org), o sea, un documento como el que estás visualizando en este momento. Las partes son las siguientes: 

* **Parte 0: Introducción al Deep Learning**. Es este *notebook*, preparatorio de la práctica mediante **realización guiada** en el que se tratarán:

    - Unas pinceladas a las matemáticas y la historia de las redes neuronales
    - Información sobre qué es y cómo instalar el software necesario para esta práctica: la distribución de python 3 [Anaconda](https://www.anaconda.com/distribution/), la librería de computación tensorial [PyTorch](https://pytorch.org/get-started/locally/) y la plataforma de notebooks `jupyter`. 
    - Una introducción a la computación matricial en python con `pytorch`, que en muchas cosas se parece a matlab. 
* **Parte 1: El Perceptrón Multicapa**. En esta parte se introduce el perceptrón multicapa (*Multi-Layer Perceptron* o MLP), la red neuronal más básica que podemos construir. Se verán detalladamente las pautas a seguir para crear, entrenar y evaluar una red neuronal utilizando la librería `pytorch`. Será una **realización guiada**, sin problemas a resolver. 

* **Parte 2: Redes Neuronales Convolucionales**. Esta parte será la **entregable** de la práctica de redes. En ella veremos las redes neuronales convolucionales, que son la **herramienta más potente** que existe a día de hoy para el procesado de imagen. Se utilizan en coches autónomos, en la búsqueda de imágenes de google, diagnóstico de enfermedades, interpretación del lenguaje, y muchas más aplicaciones. Veremos las particularidades de estas redes y cómo se implementan cada una. La segunda parte de este *notebook* será el **problema a resolver**: crear y entrenar una red convolucional para la detección de dígitos escritos a mano. 
