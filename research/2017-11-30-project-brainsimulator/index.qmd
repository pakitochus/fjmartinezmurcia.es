---
title: "BrainSimulator"
description: "Functional brain image synthesis using the KDE or MVN distribution."
author:
  - name: F.J. Martinez-Murcia
    url: https://fjmartinezmurcia.es/
    orcid: 0000-0001-8146-7056
    affiliation: Dpt. of Signal Theory, Networking and Communications. University of Granada & DaSCI. 
    affiliation-url: https://dasci.es/ 
date: 11-30-2017
categories: [python, project] # self-defined categories
citation: 
  url: https://pakitochus.github.io/fjmartinezmurcia.es/posts/2017-11-30-project-brainsimulator/ 
image: schema.jpg
draft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!
bibliography: brainsimulator.bib
---

![Schema of Brain Simulator](schema.jpg)

`brainSimulator` is a brain image synthesis procedure for data augmentation and standardization of evaluation of ML neuroimaging pipelines. It intends to generate a new image set that share characteristics given an original one. The system focuses on nuclear imaging modalities such as PET or SPECT brain images. It analyses the dataset by applying PCA to the original dataset, and then model the distribution of samples in the projected eigenbrain space using a Probability Density Function (PDF) estimator. Once the model has been built, anyone can generate new coordinates on the eigenbrain space belonging to the same class, which can be then projected back to the image space.

[{{< fa file-lines >}} Documentation](http://mapbrain.readthedocs.io/en/latest/quickstart.html){.btn .btn-outline-primary .btn role="button" data-toggle="tooltip" title="Read the documentation"}
[{{< fa download >}} Download](https://github.com/SiPBA/mapBrain){.btn .btn-primary .btn role="button" data-toggle="tooltip" title="Download the package"}

# Installation
brainSimulator is now available via pypi and can be installed directly from:

```bash
pip install brainSimulator
```

Alternatively, download the package, uncompress and execute:

```bash
cd /path/to/uncompressed/brainSimulator/
python setup.py install
```



# Quickstart
This allows to train the model once and then perform as many sample drawings as required.

```python
#navigate to the folder where simulator.py is located
import brainSimulator as sim

simulator = sim.BrainSimulator(algorithm='PCA', method='mvnormal')
simulator.fit(original_dataset, labels) 
images, classes = simulator.generateDataset(original_dataset, labels, N=200, classes=[0, 1, 2])
```

